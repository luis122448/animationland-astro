---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { LocalStorageService } from "../scripts/LocalStorageService";
import type { ScoreItem } from "../scripts/ScoreItem";

// const aux : any[] = localStorage.getItem("score-game") ? JSON.parse(localStorage.getItem("score-game") || "") : [];
// console.log(aux);

const localStoreService = new LocalStorageService("score-game");
let maxScore: ScoreItem = localStoreService.obtenerMaximaPuntuacion();
localStoreService.obtenerPuntuacionesObservable().subscribe({
  next:data => {
    maxScore = data;
    // console.log(maxScore);
  },
});
---

<Layout title="Welcome to Astro.">
  <main>
    <div class="phone">
      <h1 class="title">
        <img
          src="https://i.ibb.co/J3Kn71r/cbd152ddb203fe23ad78261749534e7d.png"
          alt="Animationland"
        />
      </h1>
      <h2 id="score" class="score">Score :</h2>
      <button id="start-game" class="start-game"> Go !</button>
      <div class="layer-1 rabbit">
        <input type="checkbox" class="shield" />
        <div class="right-ear-outer"></div>
        <div class="left-ear-outer"></div>
        <div class="left-ear-inner"></div>
        <div class="right-ear-inner"></div>
        <div class="head">
          <div class="head-eye-left"></div>
          <div class="head-eye-rigth"></div>
        </div>
      </div>
      <div class="layer-2 rabbit">
        <input type="checkbox" class="shield" />
        <div class="left-ear-outer"></div>
        <div class="right-ear-outer"></div>
        <div class="left-ear-inner"></div>
        <div class="right-ear-inner"></div>
        <div class="head">
          <div class="head-eye-left"></div>
          <div class="head-eye-rigth"></div>
        </div>
      </div>
      <div class="layer-3">
        <div class="lawn"></div>
        <div class="land"></div>
      </div>
      <div class="layer-4 rabbit">
        <input type="checkbox" class="shield" />
        <div class="left-ear-outer"></div>
        <div class="right-ear-outer"></div>
        <div class="left-ear-inner"></div>
        <div class="right-ear-inner"></div>
        <div class="head">
          <div class="head-eye-left"></div>
          <div class="head-eye-rigth"></div>
        </div>
      </div>
      <div class="layer-5">
        <div class="lawn"></div>
        <div class="land"></div>
        <div id="max-score" class="max-score">
          {
            maxScore.id > 0 ? (
              <>
                <h2 class="max-score-title">Max Score</h2>
                <div class="max-score-list">
                  <Card
                    name="Unknown"
                    time={maxScore.time}
                    score={maxScore.score}
                    href="#"
                  ></Card>
                </div>
              </>
            ) : (
              ""
            )
          }
        </div>
      </div>
      <div class="layer-6 rabbit">
        <input type="checkbox" class="shield" />
        <div class="left-ear-outer"></div>
        <div class="right-ear-outer"></div>
        <div class="left-ear-inner"></div>
        <div class="right-ear-inner"></div>
        <div class="head">
          <div class="head-eye-left"></div>
          <div class="head-eye-rigth"></div>
        </div>
      </div>
      <div class="layer-7">
        <div class="lawn"></div>
        <div class="land"></div>
      </div>
      <div class="layer-8">
        <div class="layer-8-left-lawn"></div>
        <div class="layer-8-center-lawn"></div>
        <div class="layer-8-right-lawn"></div>
      </div>
      <div class="layer-9">
        <div class="layer-9-left-cloud"></div>
        <div class="layer-9-right-cloud"></div>
      </div>
      <div class="layer-10">
        <div class="layer-10-left-cloud"></div>
        <div class="layer-10-right-cloud"></div>
      </div>
      <button id="end-game" class="end-game hide"> End :(</button>
    </div>
  </main>
</Layout>

<style>
  body {
    counter-reset: game;
    margin: 0;
    height: 100vh;
    width: 100%;
    display: grid;
    place-items: center;
  }
  /* input:checked {
    counter-increment: game;
  }
  .score::after {
    content: counter(game);
  } */
  .phone {
    position: relative;
    width: 300px;
    height: 600px;
    background: #ccefff;
    border: 8px solid black;
    border-radius: 40px;
    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);
    margin: 0 auto;
    overflow: hidden;
  }
  .layer-1 {
    position: absolute;
    z-index: 1;
    height: 450px;
    width: 80px;
    bottom: 0;
    right: 60px;
    animation-name: layer;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    /* animation-iteration-count: infinite; */
  }

  @keyframes layer {
    0% {
      transform: translate(0, 0);
    }
    50% {
      transform: translate(0, 50px);
    }
    100% {
      transform: translate(0, 0);
    }
  }

  .layer-1 input[type="checkbox"] {
    appearance: none;
    cursor: pointer;
    height: 50px;
    margin: 0;
    position: relative;
    top: 0;
    width: 80px;
  }

  .layer-2 {
    position: absolute;
    z-index: 2;
    height: 450px;
    width: 80px;
    bottom: 0;
    left: 60px;
    animation-name: layer;
    animation-delay: 100ms;
    animation-duration: 1s;
    animation-timing-function: linear;
    /* animation-iteration-count: infinite; */
  }

  .layer-2 input[type="checkbox"] {
    appearance: none;
    cursor: pointer;
    height: 50px;
    margin: 0;
    position: relative;
    top: 0;
    width: 80px;
  }

  .layer-3 {
    position: absolute;
    z-index: 3;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 auto;
    width: 220px;
    height: 400px;
    background: var(--light-brown);
    border-radius: 20px;
    box-shadow: var(--shadow);
  }
  .layer-4 {
    position: absolute;
    z-index: 4;
    left: 20px;
    bottom: 0;
    width: 80px;
    height: 350px;
    animation-name: layer;
    animation-duration: 1.5s;
    animation-timing-function: ease-in;
    animation-delay: 250ms;
  }

  .layer-4 input[type="checkbox"] {
    appearance: none;
    cursor: pointer;
    height: 50px;
    margin: 0;
    position: relative;
    top: 0;
    width: 80px;
  }

  .layer-5 {
    position: absolute;
    z-index: 5;
    left: 0;
    right: 40px;
    bottom: 0;
    background: var(--light-brown);
    border-radius: 20px;
    box-shadow: var(--shadow);
    width: 200px;
    height: 300px;
  }

  .layer-6 {
    position: absolute;
    z-index: 6;
    right: 20px;
    bottom: 0;
    width: 80px;
    height: 250px;
    animation-name: layer;
    animation-duration: 2s;
    animation-timing-function: ease-out;
  }

  .layer-6 input[type="checkbox"] {
    appearance: none;
    cursor: pointer;
    height: 50px;
    margin: 0;
    position: relative;
    top: 0;
    width: 80px;
  }

  .layer-7 {
    position: absolute;
    z-index: 7;
    right: 0;
    bottom: 0;
    background: var(--light-brown);
    border-radius: 20px;
    box-shadow: var(--shadow);
    width: 170px;
    height: 200px;
  }
  .layer-8 {
    position: absolute;
    z-index: 8;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 auto;
    width: 200px;
    height: 150px;
  }
  .layer-9 {
    position: absolute;
    z-index: 9;
    left: 0;
    bottom: 0;
    width: 120px;
    height: 100px;
  }
  .layer-10 {
    position: absolute;
    z-index: 10;
    right: 0;
    bottom: 0;
    width: 120px;
    height: 100px;
  }
  .left-ear-outer {
    position: absolute;
    right: 10px;
    top: 3px;
    background: white;
    border-radius: 90%;
    width: 20px;
    height: 50px;
  }
  .left-ear-inner {
    position: absolute;
    left: 15px;
    top: 8px;
    background: pink;
    border-radius: 90%;
    width: 10px;
    height: 50px;
  }
  .right-ear-outer {
    position: absolute;
    left: 10px;
    top: 3px;
    background: white;
    border-radius: 90%;
    width: 20px;
    height: 50px;
  }
  .right-ear-inner {
    position: absolute;
    right: 15px;
    top: 8px;
    background: pink;
    border-radius: 90%;
    width: 10px;
    height: 50px;
  }
  .head {
    position: absolute;
    top: 27px;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 80px;
    height: 100px;
    background: white;
    border-radius: 50%;
  }
  .head-eye-left {
    position: absolute;
    left: 30px;
    top: 15px;
    background: black;
    border-radius: 50%;
    width: 5px;
    height: 5px;
    animation-name: blink;
    animation-duration: 2s;
    /* animation-iteration-count: infinite; */
  }
  .head-eye-rigth {
    position: absolute;
    right: 30px;
    top: 15px;
    background: black;
    border-radius: 50%;
    width: 5px;
    height: 5px;
    animation-name: blink;
    animation-duration: 2s;
    /* animation-iteration-count: infinite; */
  }
  @keyframes blink {
    0% {
      transform: scale(1, 1);
    }
    10% {
      transform: scale(1, 0.2);
    }
    20% {
      transform: scale(1, 1);
    }
  }
  .grass-container {
    position: absolute;
    width: 100%;
    height: 50px;
    display: flex;
    justify-content: start;
  }
  .grass-item-1 {
    width: 50px;
    height: 50px;
    background: linear-gradient(-135deg, green 25%, transparent 25%) -50px 0;
  }
  .grass-item-2 {
    width: 50px;
    height: 50px;
    background: linear-gradient(135deg, black 25%, transparent 25%) 50px 0;
  }
  .lawn {
    background: var(--dark-green);
    height: 20px;
    width: 100%;
  }
  .land {
    background: linear-gradient(135deg, var(--dark-green) 25%, transparent 25%) -50px
        0,
      linear-gradient(-135deg, var(--dark-green) 25%, transparent 25%) -50px 0,
      linear-gradient(45deg, var(--light-brown) 25%, transparent 25%),
      linear-gradient(-45deg, transparent 25%, var(--dark-brown) 25%);
    background-size: 33px 30px;
    height: 30px;
    width: 100%;
  }
  .layer-8-left-lawn {
    background: var(--dark-green);
    border-radius: 40px 40px 0 0;
    bottom: 0;
    display: inline-block;
    height: 70%;
    left: 0;
    position: absolute;
    width: 80px;
  }

  .layer-8-center-lawn {
    background: var(--dark-green);
    border-radius: 40px 40px 0 0;
    bottom: 0;
    display: inline-block;
    height: 100%;
    left: 60px;
    position: absolute;
    width: 80px;
  }

  .layer-8-right-lawn {
    background: var(--dark-green);
    border-radius: 40px 40px 0 0;
    bottom: 0;
    display: inline-block;
    height: 80%;
    left: 130px;
    position: absolute;
    width: 80px;
  }

  .layer-9-left-cloud {
    background: white;
    border-radius: 40px 40px 0 0;
    display: inline-block;
    height: 100%;
    left: 0;
    position: absolute;
    width: 80px;
  }

  .layer-9-right-cloud {
    background: white;
    border-radius: 0 40px 30px 0;
    bottom: 0;
    display: inline-block;
    height: 60%;
    left: 80px;
    position: absolute;
    width: 40px;
  }

  .layer-10-left-cloud {
    background: white;
    border-radius: 40px 0 0 30px;
    bottom: 0;
    display: inline-block;
    height: 60%;
    right: 80px;
    position: absolute;
    width: 40px;
  }

  .layer-10-right-cloud {
    background: white;
    border-radius: 40px 40px 0 0;
    display: inline-block;
    height: 100%;
    right: 0px;
    position: absolute;
    width: 80px;
  }

  .title {
    display: flex;
    justify-content: center;
    margin: 35px 0 10px;
  }

  .title img {
    width: 60%;
  }

  .score {
    color: var(--light-brown);
    font-family: Arial, sans-serif;
    font-size: 16px;
    margin: 0;
    text-align: center;
  }
  .start-game {
    position: absolute;
    bottom: 0;
    top: 110px;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 60px;
    height: 30px;
    background: var(--light-brown);
    border-radius: 10%;
    border: 0;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    outline: none;
    color: white;
    transition: all 0.5s linear;
  }
  .start-game:hover {
    background: var(--dark-brown);
  }
  .end-game {
    z-index: 11;
    position: absolute;
    bottom: 60px;
    left: 0;
    right: 0;
    margin: 0 auto;
    width: 60px;
    height: 30px;
    background: var(--light-brown);
    border-radius: 10%;
    border: 0;
    font-size: 16px;
    font-weight: bold;
    cursor: pointer;
    outline: none;
    color: white;
    transition: all 0.5s linear;
  }
  .end-game:hover {
    background: var(--dark-brown);
  }
  .go-animation {
    animation-iteration-count: infinite;
    /* animation-duration: 10s; */
  }
  .stop-animation {
    animation-iteration-count: 0;
  }
  .hide {
    opacity: 0%;
  }
  .max-score-title{
    position: absolute;
    top: 55px;
    left: 30px;
    color: white;
    font-family: Arial, sans-serif;
    font-size: 14px;
    margin: 0 auto;
    text-align: center;
  }
  .max-score-list{
    position: absolute;
    left: 12px;
    top: 75px;
  }
</style>
<script>
  import { LocalStorageService } from "../scripts/LocalStorageService";

  const time = 10000;
  const buttonStartGame = document.getElementById("start-game");
  const buttonEndGame = document.getElementById("end-game");
  const rabbit = document.querySelectorAll(".rabbit");
  const checkboxScore = document.querySelectorAll(".shield");
  const h2Score = document.querySelector("#score");
  // Let
  let score = 0;
  function startGame() {
    score = 0;
    if (h2Score) {
      h2Score.innerHTML = `Score : ${score}`;
    }
    // Inicia un temporizador de 2 segundos
    rabbit.forEach((item) => {
      item.classList.add("go-animation");
    });
    buttonEndGame?.classList.remove("hide");
    buttonStartGame?.classList.add("hide");
    setTimeout(() => {
      // Después de 10 segundo se ejcuta el evento
      rabbit.forEach((item) => {
        item.classList.remove("go-animation");
      });
      buttonStartGame?.classList.remove("hide");
      buttonEndGame?.classList.add("hide");
      registerScore(score);
      // endGame();
    }, time);
  }

  function endGame() {
    rabbit.forEach((item) => {
      item.classList.remove("go-animation");
    });
    buttonStartGame?.classList.remove("hide");
    buttonEndGame?.classList.add("hide");
    score = 0;
    if (h2Score) {
      h2Score.innerHTML = `Score : ${score}`;
    }
  }

  function addScore() {
    score++;
    if (h2Score) {
      h2Score.innerHTML = `Score : ${score}`;
    }
  }

  buttonStartGame?.addEventListener("click", startGame);
  buttonEndGame?.addEventListener("click", endGame);
  checkboxScore?.forEach((item) => {
    item.addEventListener("click", addScore);
  });

  function registerScore(score: number) {
    const localStoreService = new LocalStorageService("score-game");
    localStoreService.guardarPuntuacion(new Date(), score);
  }
</script>
